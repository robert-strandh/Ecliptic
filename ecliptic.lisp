(cl:in-package #:ecliptic)

(defun sind (angle)
  (sin (/ (* angle pi) 180)))

(defun cosd (angle)
  (cos (/ (* angle pi) 180)))

(defun day-of-year (day month year)
  (let ((N1 (floor (/ (* 275 month) 9)))
        (N2 (floor (/ (+ month 9) 12)))
        (N3 (1+ (floor (/ (+ (- year (* 4 (floor (/ year 4)))) 2) 3)))))
    (- (+ (- N1 (* N2 N3)) day) 30)))

(defun ecliptic (day month year &key (latitude 44.8058) (longitude -0.6304) (zenith :official) (localoffset 1))
  (let* ((z (ecase zenith
              (:official (+ 90 (/ 50 60)))
              (:civil 96)
              (:nautical 102)
              (:astronomical 108)))
         (N (day-of-year day month year))
         (lngHour  (/ longitude 15))
         (Tr (+ N (/ (- 6 lngHour) 24)))
         (Ts (+ N (/ (- 18 lngHour) 24)))
         (Mr (- (* 0.9856 Tr) 3.289))
         (Ms (- (* 0.9856 Ts) 3.289))
         (Lr (+ Mr
                (* 1.916 (sind Mr))
                (* 0.020 (sind (* 2 Mr)))
                282.634))
         (Lr (cond ((< Lr 0) (+ Lr 360))
                   ((> Lr 360) (- Lr 360))
                   (t Lr)))
         (Ls (+ Ms
                (* 1.916 (sind Ms))
                (* 0.020 (sind (* 2 Ms)))
                282.634))
         (Ls (cond ((< Ls 0) (+ Ls 360))
                   ((> Ls 360) (- Ls 360))
                   (t Ls)))
         (RAr (/ (* (atan (* 0.91764 (tan (/ (* Lr pi) 180)))) 180) pi))
         (RAr  (cond ((< RAr 0) (+ RAr 360))
                     ((> RAr 360 (- RAr 360)))
                     (t RAr)))
         (RAs (/ (* (atan (* 0.91764 (tan (/ (* Ls pi) 180)))) 180) pi))
         (RAs  (cond ((< RAs 0) (+ RAs 360))
                     ((> RAs 360 (- RAs 360)))
                     (t RAs)))
         (Lrq (* (floor (/ Lr 90)) 90))
         (Lsq (* (floor (/ Ls 90)) 90))
         (RArq (* (floor (/ RAr 90)) 90))
         (RAsq (* (floor (/ RAs 90)) 90))
         (RAr (+ RAr (- Lrq RArq)))
         (RAs (+ RAs (- Lsq RAsq)))
         (RAr (/ RAr 15))
         (RAs (/ RAs 15))
         (sinDecr (* 0.39782 (sind Lr)))
         (sinDecs (* 0.39782 (sind Ls)))
         (cosDecr (cos (asin sinDecr)))
         (cosDecs (cos (asin sinDecs)))
         (cosHr (/ (- (cosd z) (* sinDecr (sind latitude)))
                   (* cosDecR (cosd latitude))))
         (cosHs (/ (- (cosd z) (* sinDecs (sind latitude)))
                   (* cosDecs (cosd latitude))))
         
         (Hr (/ (- 360 (/ (* (acos coshr) 180) pi)) 15))
         (Hs (/ (/ (* (acos coshs) 180) pi) 15))
         (Tr (+ Hr (- RAr (* 0.06571 Tr) 6.622)))
         (Ts (+ Hs (- RAs (* 0.06571 Ts) 6.622)))
         (UTr (- Tr lngHour))
         (UTr (cond ((< UTr 0) (+ UTr 24))
                    ((> UTr 24) (- UTr 24))
                    (t UTr)))
         (UTs (- Ts lngHour))
         (UTs (cond ((< UTs 0) (+ UTs 24))
                    ((> UTs 24) (- UTs 24))
                    (t UTs)))
         (localTr (+ UTr localoffset))
         (localTs (+ UTs localoffset)))
    (values (multiple-value-bind (hours fraction)
                (floor localTr)
              (list hours (round (* fraction 60))))
            (multiple-value-bind (hours fraction)
                (floor localTs)
              (list hours (round (* fraction 60)))))))
